<project name="Tracer" default="compile" basedir=".">
    <description>
        Build File for Tracer
    </description>

    <!--***********************-->
    <!--******PROPERTIES*******-->
    <!--***********************-->

    <!-- Basic File Paths -->
    <property name="src" location="src"/>
    <property name="test" location="test"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="dep" location="dependencies"/>
    <property name="docs" location="docs/api"/>

    <!-- Specific File Paths -->
    <property name="java-1.7" location="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar"/>

    <property name="thrift-src" location="${src}/com/lightstep/tracer/thrift"/>
    <property name="thrift-compiled" location="${build}/com/lightstep/tracer/thrift"/>
    <property name="tracer-src" location="${src}/com/lightstep/tracer"/>
    <property name="tracer-compiled" location="${build}/com/lightstep/tracer"/>
    <property name="simple-tests" location="${src}/com/lightstep/tests"/>
    <property name="simple-tests-compiled" location="${build}/com/lightstep/tests"/>

    <!--******************-->
    <!--******PATHS*******-->
    <!--******************-->

    <!-- Set of external, dependency jars -->
    <path id="path.external.dependencies">
        <fileset dir="${dep}" includes="*.jar"/>
    </path>

    <!-- Set of compiled thrift .class files -->
    <path id="path.thrift.compiled">
        <fileset dir="${thrift-compiled}" includes=".class"/>
    </path>

    <!-- Set of compiled tracer .class files -->
    <path id="path.tracer.compiled">
        <fileset dir="${tracer-compiled}" includes=".class"/>
    </path>

    <!--******************-->
    <!--*****TARGETS******-->
    <!--******************-->

    <!-- Create the build directory structure used by compile. -->
    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
    </target>

    <!-- Create the autogenerated thrift src files -->
    <target name="autogenerate-thrift" description="produce the autogenerated thrift code">
        <exec executable="sh">
            <arg value="-c"/>
            <arg value="(cd ../go/src; thrift -r --gen java --out ../../java/src crouton/crouton.thrift)"/>
        </exec>
    </target>

    <!-- Compile the autogenerated thrift src files -->
    <target name="compile-thrift" depends="init, autogenerate-thrift" description="compile the runtime thrift src">
        <javac target="1.7" source="1.7" bootclasspath="${java-1.7}" includeantruntime="false" srcdir="${thrift-src}" destdir="${build}">
            <classpath refid="path.external.dependencies"/>
        </javac>
    </target>

    <!-- Compile the tracer src files -->
    <target name="compile" depends="compile-thrift" description="compile the tracer src">
        <javac target="1.7" source="1.7" bootclasspath="${java-1.7}" includeantruntime="false" srcdir="${tracer-src}" destdir="${build}">
            <classpath>
             <path refid="path.external.dependencies"/>
             <path refid="path.thrift.compiled"/>
             </classpath>
        </javac>
    </target>

    <!-- Compile the "simple tests", e.g. SpansLogsTest, Threadtest, etc. -->
    <target name="compile-simple-tests" depends="compile" description="compile the simple tests src">
        <javac target="1.7" source="1.7" bootclasspath="${java-1.7}" includeantruntime="false" srcdir="${simple-tests}" destdir="${build}">
            <classpath>
             <path refid="path.external.dependencies"/>
             <path refid="path.thrift.compiled"/>
             <!-- <path refid="path.tracer.compiled"/> -->
             </classpath>
        </javac>
    </target>

    <!-- Execute the SpansLogsTest -->
    <target name="spans-logs-test" depends="compile-simple-tests" description="run SpansLogsTest">
        <java classname="com.lightstep.tests.SpansLogsTest.SpansLogsTest">
            <classpath>
                <path location="${build}"/>
                <path refid="path.external.dependencies"/>
                <path refid="path.thrift.compiled"/>
                <path refid="path.tracer.compiled"/>                
            </classpath>
        </java>
    </target>

    <!-- Execute the PayloadTest -->
    <target name="payload-test" depends="compile-simple-tests" description="run PayloadTest">
        <java classname="com.lightstep.tests.PayloadTest.PayloadTest">
            <classpath>
                <path location="${build}"/>
                <path refid="path.external.dependencies"/>
                <path refid="path.thrift.compiled"/>
                <path refid="path.tracer.compiled"/>                
            </classpath>
        </java>
    </target>

    <!-- Execute the ThreadTest -->
    <target name="thread-test" depends="compile-simple-tests" description="run ThreadTest">
        <java classname="com.lightstep.tests.ThreadTest.ThreadTest">
            <classpath>
                <path location="${build}"/>
                <path refid="path.external.dependencies"/>
                <path refid="path.thrift.compiled"/>
                <path refid="path.tracer.compiled"/>                
            </classpath>
        </java>
    </target>

    <!-- Execute the LoggingTest -->
    <target name="logging-test" depends="compile-simple-tests" description="run LoggingTest">
        <java classname="com.lightstep.tests.LoggingTest.LoggingTest">
            <classpath>
                <path location="${build}"/>
                <path refid="path.external.dependencies"/>
                <path refid="path.thrift.compiled"/>
                <path refid="path.tracer.compiled"/>                
            </classpath>
        </java>
    </target>

    <!-- Compile the "unit tests" -->
    <target name="compile-unit-tests" depends="compile" description="compile the tracer units tests">
        <javac target="1.7" source="1.7" bootclasspath="${java-1.7}" includeantruntime="false" srcdir="${test}" destdir="${build}">
            <classpath>
                 <path refid="path.external.dependencies"/>
                 <path refid="path.thrift.compiled"/>
                 <path refid="path.tracer.compiled"/>
             </classpath>
        </javac>
    </target>

    <!-- Execute the unit tests -->
    <target name="unit-test" depends="compile-unit-tests" description="run unit-test">
        <java classname="com.lightstep.tracer.RuntimeTestRunner">
            <classpath>
                <path location="${build}"/>
                <path refid="path.external.dependencies"/>
                <path refid="path.thrift.compiled"/>
                <path refid="path.tracer.compiled"/>                
            </classpath>
        </java>
    </target>


    <!-- Create the distribution jar file(s) -->
    <target name="dist" depends="compile" description="generate the distribution jar file(s)">
        <mkdir dir="${dist}"/>
        <jar destfile="${dist}/Tracer.jar">
            <fileset dir="${build}" includes="**/*.class" excludes="${simple-tests-compiled}/**"/>
            <manifest>
                <attribute name="Class-Path" value="dependencies/*"/>
            </manifest>
        </jar>
    </target>

    <!-- Delete the ${build} and ${dist} directory trees -->
    <target name="clean" description="clean directories">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <!-- Compile after clean -->
    <target name="clean-compile" depends="clean, compile" description="clean and then compile"/>

    <!-- Create distribution after clean -->
    <target name="clean-dist" depends="clean, dist" description="clean and then create distribution jars"/>

    <!-- Create JavaDoc -->
    <target name="docs" description="generate the JavaDoc">
        <mkdir dir="${docs}"/>
        <javadoc packagenames="com.lightstep.tracer, com.lightstep.tracer.runtime"
                classpathref="path.external.dependencies"
                sourcepath="${src}"
                destdir="${docs}"
                excludepackagenames="com.lightstep.tracer.shared, com.lightstep.tracer.debug"
                access="public"
                author="true"
                version="true"
                use="true"
                windowtitle="Tracer API">
        </javadoc>
    </target>

</project>
